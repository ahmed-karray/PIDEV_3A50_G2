<?php

namespace ContainerHvZrj12;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_CacheWarmer_ExpressionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.cache_warmer.expression' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\CacheWarmer\ExpressionCacheWarmer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'CacheWarmer'.\DIRECTORY_SEPARATOR.'CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'CacheWarmer'.\DIRECTORY_SEPARATOR.'ExpressionCacheWarmer.php';

        return $container->privates['security.cache_warmer.expression'] = new \Symfony\Bundle\SecurityBundle\CacheWarmer\ExpressionCacheWarmer(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.security.expression.KSRr5b1'] ??= new \Symfony\Component\ExpressionLanguage\Expression('not is_granted(\'IS_AUTHENTICATED_FULLY\')'));
            yield 1 => ($container->privates['.security.expression.JdWgH9m'] ??= new \Symfony\Component\ExpressionLanguage\Expression('user.getIsVerified() == true'));
        }, 2), ($container->privates['security.expression_language'] ?? $container->load('getSecurity_ExpressionLanguageService')));
    }
}
